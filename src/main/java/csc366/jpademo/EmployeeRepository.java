package csc366.jpademo;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.repository.query.Param;

import java.util.List;

@Repository
public interface EmployeeRepository extends JpaRepository<Employee, Long> {

    // Query inferred from method name, code generated by Spring Framework
    @Query("from Employee s where s.FirstName = :name")
    Employee findByFirstName(@Param("name") String name);

    // JPQL query
    @Query("from Employee s where s.FirstName = :name")
    Employee findByNameJpql(@Param("name") String name);

    // JPQL query with join (assuming there is an 'addresses' field in the Customer entity)
    @Query("select s from Employee s join s.payStubs ctr where s.FirstName = :name")
    Employee findByNameWithPayStubsJpql(@Param("name") String name);

    // Native SQL query (validity not checked, invalid SQL will cause runtime exception)
    @Query(value = "select * from employee as s where s.FirstName = :name ", nativeQuery = true)
    Employee findByNameSql(@Param("name") String name);

    @Modifying
    @Query("update Employee s set s.FirstName = :newName where s.FirstName = :oldName")
    void updateName(@Param("oldName") String oldName, @Param("newName") String newName);

    // Add more custom queries based on your requirements

}
